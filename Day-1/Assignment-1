- DLT
DLT : Distributed ledger 
TPS : number of  transactions that a network is capable of processing each second 

Traditionally DLT networks works on consensus timestamping 
this ensures that all transactions on the network agree with each other node in the platform 
need to provide proof of work which require computations therby increases time in turn gives low tps


1. DAG
- Using Directed acyclic graphs (uni-directional) 
- nodes decide what happens (same as blockchain)
- verifies only 2 previous trasactions due to stronger relation
- more validations happens as network volume builds up


2. HashGraph 
- this methods achieves transaction success solely on consensus no PoW
- achieved with gossip about gossip and virtual voting and this also doesn't require pow
- little time in initation and transactions 
- morethan 250,000 tops
- fairness 
- cancellation is reduced by putting them in future blocks 

3. Holochain  
- decentralization of web (client-server model)no blockage /scalable
- mix of blockchain, torrent(P2P), Github
- each node will run on a chain of its own (nodes are independent) like siacoin ?
- DHT store data using certain keys (data is saved in actual location distributed in various locations across the globe )
- interactions are distributed
- no miners 

4. Corda
Corda is an open permissioned blockchain as it shares data only with the parties involved in the transaction (blockchain transmits to all nodes)

- Hash Algorithms  
A signature that aids in sending any file that confirms that the file has arrived the destination is intact without any courruptions or tampering (a check digit like a barcode or credit card) for the entire file which basically a hexa-decimal or 16, 32, 64 bits in size (a long number that sums everthing in that file/summary).  

3 main requirements 

- reasonably fast but not to fast since it can be cracked. 
- if one bit is changed anywhere in the file the whole hash should be completely different (avalanche effect).
- Hash collisions must be avoided (2 documents cannot have the same hash).

1. Sha256  
Secure Hash Algorithm 256 (meaning 2 to the power 256 i.e 2 power 32 multiplied 8 times)

2. Keccak256
A part of solidity programming based on SHA-3 standard cryptograph based on sponge functions 


3. Ripemd160
RIPE Message Digest are typically represented as 40-digit hexadecimal numbers. 160-bit cryptographic hash function designed to replace 128-bit hash functions MD4, MD5, and RIPEMD

4. ECC
ECC focuses on pairs of public and private keys in the context of RSA achieves one-way encryption of things like emails, data, and software using prime factorization.  bases its approach to public key cryptographic systems on how elliptic curves are structured algebraically over finite fields.

5. BIP 32&39

- Turing Complete
Turing Complete refers to a machine that, given enough time and memory along with the necessary instructions, can solve any computational problem, no matter how complex. The term is normally used to describe modern programming languages as most of them are Turing Complete

Bitcoin, and its Script programming language, was designed as a non-Turing complete system with limited functionality. The Bitcoin software was programmed solely to process bitcoin transactions and cannot support complex, multi-step smart contract logic.

Ethereum allows developers to write code using the Turing complete Solidity programming language, and execute it using the Ethereum Virtual Machine, which is also Turing complete. Theoretically, itâ€™s possible to write any program for any use case and run it on Ethereum.

